var search_data = {"index":{"searchIndex":["array","datetime","falseclass","numeric","string","toml","generator","key","parser","parslet","table","tablearray","transformer","trueclass","format()","inject!()","load()","load_file()","new()","new()","new()","new()","parse_string()","resolve_table()","resolve_table_array()","to_toml()","to_toml()","to_toml()","to_toml()","to_toml()","to_toml()","visit()","visit_array()","license","readme"],"longSearchIndex":["array","datetime","falseclass","numeric","string","toml","toml::generator","toml::key","toml::parser","toml::parslet","toml::table","toml::tablearray","toml::transformer","trueclass","toml::generator#format()","toml::generator::inject!()","toml::load()","toml::load_file()","toml::generator::new()","toml::key::new()","toml::parser::new()","toml::table::new()","toml::transformer::parse_string()","toml::parser#resolve_table()","toml::parser#resolve_table_array()","array#to_toml()","datetime#to_toml()","falseclass#to_toml()","numeric#to_toml()","string#to_toml()","trueclass#to_toml()","toml::generator#visit()","toml::transformer::visit_array()","",""],"info":[["Array","","Array.html","",""],["DateTime","","DateTime.html","",""],["FalseClass","","FalseClass.html","",""],["Numeric","","Numeric.html","",""],["String","","String.html","",""],["TOML","","TOML.html","","<p>Don&#39;t do monkey-patching by default. Only pulled in by TOML::Generator\nif needed (see generator.rb …\n"],["TOML::Generator","","TOML/Generator.html","",""],["TOML::Key","","TOML/Key.html","",""],["TOML::Parser","","TOML/Parser.html","",""],["TOML::Parslet","","TOML/Parslet.html","",""],["TOML::Table","","TOML/Table.html","",""],["TOML::TableArray","","TOML/TableArray.html","",""],["TOML::Transformer","","TOML/Transformer.html","",""],["TrueClass","","TrueClass.html","","<p>Adds to_toml methods to base Ruby classes used by the generator.\n"],["format","TOML::Generator","TOML/Generator.html#method-i-format","(val)","<p>Returns the value formatted for TOML.\n"],["inject!","TOML::Generator","TOML/Generator.html#method-c-inject-21","()","<p>Inject to_toml methods into the Ruby classes used by TOML (booleans,\nString, Numeric, Array). You can …\n"],["load","TOML","TOML.html#method-c-load","(content)",""],["load_file","TOML","TOML.html#method-c-load_file","(path)",""],["new","TOML::Generator","TOML/Generator.html#method-c-new","(doc)",""],["new","TOML::Key","TOML/Key.html#method-c-new","(key, value)",""],["new","TOML::Parser","TOML/Parser.html#method-c-new","(markup)",""],["new","TOML::Table","TOML/Table.html#method-c-new","(name)",""],["parse_string","TOML::Transformer","TOML/Transformer.html#method-c-parse_string","(val)","<p>Utility to properly handle escape sequences in parsed string.\n"],["resolve_table","TOML::Parser","TOML/Parser.html#method-i-resolve_table","(t)",""],["resolve_table_array","TOML::Parser","TOML/Parser.html#method-i-resolve_table_array","(t)",""],["to_toml","Array","Array.html#method-i-to_toml","()",""],["to_toml","DateTime","DateTime.html#method-i-to_toml","()",""],["to_toml","FalseClass","FalseClass.html#method-i-to_toml","()",""],["to_toml","Numeric","Numeric.html#method-i-to_toml","()",""],["to_toml","String","String.html#method-i-to_toml","()",""],["to_toml","TrueClass","TrueClass.html#method-i-to_toml","()",""],["visit","TOML::Generator","TOML/Generator.html#method-i-visit","(hash, path = \"\")",""],["visit_array","TOML::Transformer","TOML/Transformer.html#method-c-visit_array","(h)","<p>New array cleanup TODO: Make this more readable/understandable.\n"],["LICENSE","","LICENSE.html","","<p>The MIT License\n<p>Copyright © Tom Preston-Werner\n<p>Permission is hereby granted, free of charge, to any person …\n"],["README","","README_md.html","","<p>TOML\n<p>A sane configuration format from @mojombo. More information here:\ngithub.com/mojombo/toml\n<p>This is …\n"]]}}